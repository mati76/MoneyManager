<Window x:Class="TransactionsImporter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TransactionsImporter"
        xmlns:converters="clr-namespace:TransactionsImporter.ValueConverters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1200">
    <Window.Resources>
        <converters:DateTimeConverter x:Key="dateConverter"/>
        <converters:CurrencyConverter x:Key="currencyConverter"/>
        <converters:CurrencyToColorConverter x:Key="currencyToColorConverter"/>
        <converters:IntToVisibilityConverter x:Key="intToVisibilityConverter"/>
        <converters:FileTypeConverter x:Key="fileTypeConverter" />
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>
        <DataTemplate x:Key="amountTemplate">
            <TextBlock Foreground="{Binding Path=Amount, Converter={StaticResource currencyToColorConverter}}" HorizontalAlignment="Right" 
                       Text="{Binding Path=Amount, Converter={StaticResource currencyConverter}}">
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="tranCountTemplate">
            <TextBlock HorizontalAlignment="Center" Text="{Binding Count}"/>
        </DataTemplate>
        <DataTemplate x:Key="categoryTemplate">
            <StackPanel Height="28">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding OriginalCategory}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding Path=DataContext.IsEditing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button Background="Transparent" BorderBrush="Transparent" Margin="5, 0, 0, 0" Height="22"
                            Command="{Binding DataContext.EditCategoryCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}">
                        <Image Height="20" Source="/Icons/edit.png"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding Path=DataContext.IsEditing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <ComboBox DisplayMemberPath="Name" SelectedItem="{Binding Category}"
                          ItemsSource="{Binding DataContext.Categories, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CategoryChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="MinWidth" Value="150" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True" />
                                        <Condition Binding="{Binding Path=DataContext.IsEditing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="detailsTemplate">
            <Button Background="Transparent"
                Command="{Binding DataContext.ShowTransactionsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}">
                <Image Margin="0,0,5,0" Height="20">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Icons/list-icon.png" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
        </DataTemplate>
        <DataTemplate x:Key="checkBoxItemTemplate">
            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"
                      Command="{Binding DataContext.OnCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" >
            </CheckBox>
        </DataTemplate>
        <DataTemplate x:Key="checkBoxHeaderTemplate">
            <CheckBox x:Name="CheckAll" IsChecked="{Binding Path=DataContext.IsAllSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
            </CheckBox>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="400"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <DockPanel Margin="10,0,10,0" HorizontalAlignment="Stretch" TextElement.FontFamily="Arial Rounded MT Bold">
            <Button DockPanel.Dock="Left" Content="Open CSV file" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding OpenFileCommand, Mode=OneWay}" Width="150" Height="30" FontSize="15"/>
            <StackPanel DockPanel.Dock="Left" Margin="10,0,0,0" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" >
                    <RadioButton GroupName="CsvFormat" Content="MBank" IsChecked="{Binding Path=FileType, Converter={StaticResource fileTypeConverter}, ConverterParameter=MBank}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <RadioButton GroupName="CsvFormat" Content="PKO BP" IsChecked="{Binding Path=FileType, Converter={StaticResource fileTypeConverter}, ConverterParameter=PKO}" VerticalAlignment="Center" Margin="9,0,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                    <TextBlock Text="Encoding: " VerticalAlignment="Center"/>
                    <ComboBox ItemsSource="{Binding Encodings}" SelectedItem="{Binding Encoding, Mode=TwoWay}" Width="Auto" MinWidth="80" DisplayMemberPath="Name"/>
                </StackPanel>
            </StackPanel>
            <Button DockPanel.Dock="Right" Content="Clear Transactions" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding ClearCommand, Mode=OneWay}" Width="170" Height="30" FontSize="15" FontFamily="Arial Rounded MT Bold"/>
            <Canvas HorizontalAlignment="Stretch"/>
        </DockPanel>
        <ListView Margin="10,10,10,0" ItemsSource="{Binding Totals}" Grid.Row="1" SelectionMode="Single" x:Name="totalsList">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="{Binding CopyToClipboardCommand}"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="250" Header="Category Name" DisplayMemberBinding="{Binding Category.Name}" x:Name="totalsCol1"/>
                    <GridViewColumn Width="150" Header="Total Amount" CellTemplate="{StaticResource amountTemplate}" x:Name="totalsCol2"/>
                    <GridViewColumn Width="150" Header="Transactions Count" CellTemplate="{StaticResource tranCountTemplate}" x:Name="totalsCol3"/>
                    <GridViewColumn Width="50" CellTemplate="{StaticResource detailsTemplate}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin = "17, 5, 10, 0" VerticalAlignment="Center">
            <TextBlock Text="Total:" Width="{Binding Path=ActualWidth, ElementName=totalsCol1}" FontSize="13px" FontFamily="Arial Rounded MT Bold"/>
            <TextBlock Text="{Binding TotalAmount, Converter={StaticResource currencyConverter}}" TextAlignment="Right" Padding="0, 0, 7, 0"
                       Width="{Binding Path=ActualWidth, ElementName=totalsCol2}" FontSize="13px" FontFamily="Arial Rounded MT Bold"/>
            <TextBlock Text="{Binding TransactionsCount}" Width="{Binding Path=ActualWidth, ElementName=totalsCol3}"
                       FontSize="13px" FontFamily="Arial Rounded MT Bold" Margin="5, 0, 0, 0" TextAlignment="Center"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="10,10,0,0">
            <CheckBox IsChecked="{Binding ShowOnlyExpences, Mode=TwoWay}" Margin="0,5,0,0">Only Expenses</CheckBox>
            <TextBox HorizontalAlignment="Center" Margin="10,3,0,0" BorderBrush="{x:Null}" SelectionBrush="{x:Null}" SelectionTextBrush="{x:Null}" Background="{x:Null}" Height="25" VerticalAlignment="Top">Filter By Category:</TextBox>
            <ComboBox ItemsSource="{Binding UnmatchedCategories}" Height="25" Width="150" HorizontalAlignment="Left" SelectedValue="{Binding SelectedCategory, Mode=TwoWay}"
                      VerticalAlignment="Top" Margin="10,0,0,0"/>
        </StackPanel>
        <ListView Margin="10,10,10,10" ItemsSource="{Binding NotMatchedTransactions}" Grid.Row="4" SelectionMode="Single">
            <ListView.ItemContainerStyle>
            <Style TargetType="ListViewItem">
                <Setter Property="Height" Value="28" />
            </Style>
            </ListView.ItemContainerStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="30" CellTemplate="{StaticResource checkBoxItemTemplate}" HeaderTemplate="{StaticResource checkBoxHeaderTemplate}"/>
                    <GridViewColumn Width="100" Header="Date" DisplayMemberBinding="{Binding Path=Date, Converter={StaticResource dateConverter}}"  />
                    <GridViewColumn Width="100" Header="Amount" CellTemplate="{StaticResource amountTemplate}"/>
                    <GridViewColumn Width="200" Header="Category" CellTemplate="{StaticResource categoryTemplate}" />
                    <GridViewColumn Width="Auto" Header="Description" DisplayMemberBinding="{Binding Description}" />
                </GridView>
            </ListView.View>
        </ListView>
        <DockPanel Grid.Row="5" Margin="10,0,10,0" HorizontalAlignment="Stretch">
            <Button VerticalAlignment="Center" FontFamily="Arial Rounded MT Bold" FontSize="15" Content="Load Transactions" DockPanel.Dock="Left" Padding="5, 0, 5, 0"
                    Command="{Binding LoadTransactionsCommand}"/>
            <Button VerticalAlignment="Center" FontFamily="Arial Rounded MT Bold" FontSize="15" Content="Save Transactions" DockPanel.Dock="Left" Margin="10, 0, 0, 0" Padding="5, 0, 5, 0"
                    Command="{Binding SaveTransactionsCommand}"/>
            <Button HorizontalAlignment="Right" VerticalAlignment="Center" Width="Auto" FontFamily="Arial Rounded MT Bold" FontSize="15" 
                    Command="{Binding DeleteTransactionCommand, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Delete Transactions</TextBlock>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding TransactionsSelected, Converter={StaticResource intToVisibilityConverter}, Mode=OneWay}">
                        <TextBlock Foreground="Green" FontSize="10px" Text=" ("></TextBlock>
                        <TextBlock Foreground="Green" FontSize="10px" Text="{Binding Path=TransactionsSelected, Mode=OneWay}"></TextBlock>
                        <TextBlock Foreground="Green" FontSize="10px" Text=" selected)"></TextBlock>
                    </StackPanel>
                </StackPanel>
            </Button>
        </DockPanel>
    </Grid>
</Window>

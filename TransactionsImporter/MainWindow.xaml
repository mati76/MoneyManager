<Window x:Class="TransactionsImporter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TransactionsImporter"
        xmlns:converters="clr-namespace:TransactionsImporter.ValueConverters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1200">
    <Window.Resources>
        <converters:DateTimeConverter x:Key="dateConverter"/>
        <converters:CurrencyConverter x:Key="currencyConverter"/>
        <converters:CurrencyToColorConverter x:Key="currencyToColorConverter"/>
        <converters:IntToVisibilityConverter x:Key="intToVisibilityConverter"/>
        <converters:FileTypeConverter x:Key="fileTypeConverter" />
        <converters:DecimalNegativeConverter x:Key="decimalNegativeConverter"/>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>
        <ControlTemplate x:Key="splitTransactionTemplate" 
                 TargetType='{x:Type ListViewItem}'>
            <Grid Background="Beige" HorizontalAlignment="Stretch"  TextElement.FontFamily="Arial Rounded MT Bold">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <TextBlock TextAlignment="Center" VerticalAlignment="Center">
                    <Hyperlink Command="{Binding Path=DataContext.RoundAmountCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                        <TextBlock>
                            <TextBlock.Text>
                                <Binding Mode="TwoWay" Path="DataContext.TransactionSplit.AmountX" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Converter="{StaticResource currencyConverter}">
                                    <Binding.ConverterParameter>
                                        <sys:Int32>2</sys:Int32>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Hyperlink>
                </TextBlock>
                <Slider Value="{Binding Mode=TwoWay, Path=DataContext.TransactionSplit.AmountX, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource decimalNegativeConverter}}"
                    Maximum="{Binding Path=DataContext.TransactionSplit.Transaction.Amount, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource decimalNegativeConverter}}" 
                    Grid.Column="1" IsEnabled="True" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Minimum="0.5" SmallChange="0.1"></Slider>
                <TextBlock TextAlignment="Center" VerticalAlignment="Center" Grid.Column="2">
                    <TextBlock.Text>
                        <Binding Path="DataContext.TransactionSplit.AmountY" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" Converter="{StaticResource currencyConverter}">
                            <Binding.ConverterParameter>
                                <sys:Int32>2</sys:Int32>
                            </Binding.ConverterParameter>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>
                <Button Content="OK" Grid.Column="3" Command="{Binding Path=DataContext.ApplySplitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}"/>
                <Button Content="Cancel" Grid.Column="4" Command="{Binding Path=DataContext.CancelSplitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
            </Grid>
        </ControlTemplate>
        <DataTemplate x:Key="actionsTemplate">
            <Button Content="Split" Command="{Binding Path=DataContext.SplitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                    CommandParameter="{Binding}" Width="100" FontFamily="Arial Rounded MT Bold">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
        <DataTemplate x:Key="amountTemplate">
            <TextBlock Foreground="{Binding Path=Amount, Converter={StaticResource currencyToColorConverter}}" HorizontalAlignment="Right" 
                       Text="{Binding Path=Amount, Converter={StaticResource currencyConverter}}">
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="tranCountTemplate">
            <TextBlock HorizontalAlignment="Center" Text="{Binding Count}"/>
        </DataTemplate>
        <DataTemplate x:Key="categoryTemplate">
            <StackPanel Height="28">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding OriginalCategory}" Height="22" Padding="0, 3, 0, 0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBeingEdited}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button Background="Transparent" BorderBrush="Transparent" Margin="5, 0, 0, 0" Height="22"
                            Command="{Binding DataContext.EditCategoryCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}">
                        <Image Height="20" Source="/Icons/edit.png"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True" />
                                            <Condition Binding="{Binding IsBeingEdited}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <ComboBox DisplayMemberPath="Name" SelectedItem="{Binding Category}"
                          ItemsSource="{Binding DataContext.Categories, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CategoryChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="MinWidth" Value="150" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsBeingEdited}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="detailsTemplate">
            <Button Background="Transparent"
                Command="{Binding DataContext.ShowTransactionsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding}">
                <Image Margin="0,0,5,0" Height="20">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/Icons/list-icon.png" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
        </DataTemplate>
        <DataTemplate x:Key="checkBoxItemTemplate">
            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"
                      Command="{Binding DataContext.OnCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" >
            </CheckBox>
        </DataTemplate>
        <DataTemplate x:Key="checkBoxHeaderTemplate">
            <CheckBox x:Name="CheckAll" IsChecked="{Binding Path=DataContext.IsAllSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
            </CheckBox>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="400"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <DockPanel Margin="10,0,10,0" HorizontalAlignment="Stretch" TextElement.FontFamily="Arial Rounded MT Bold">
            <Button DockPanel.Dock="Left" Content="Open CSV file" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding OpenFileCommand, Mode=OneWay}" Width="150" Height="30" FontSize="15"/>
            <StackPanel DockPanel.Dock="Left" Margin="10,0,0,0" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" >
                    <RadioButton GroupName="CsvFormat" Content="MBank" IsChecked="{Binding Path=FileType, Converter={StaticResource fileTypeConverter}, ConverterParameter=MBank}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <RadioButton GroupName="CsvFormat" Content="PKO BP" IsChecked="{Binding Path=FileType, Converter={StaticResource fileTypeConverter}, ConverterParameter=PKO}" VerticalAlignment="Center" Margin="9,0,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0, 5, 0, 0">
                    <TextBlock Text="Encoding: " VerticalAlignment="Center"/>
                    <ComboBox ItemsSource="{Binding Encodings}" SelectedItem="{Binding Encoding, Mode=TwoWay}" Width="Auto" MinWidth="80" DisplayMemberPath="Name"/>
                </StackPanel>
            </StackPanel>
            <Button DockPanel.Dock="Right" Content="Clear Transactions" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding ClearCommand, Mode=OneWay}" Width="170" Height="30" FontSize="15" FontFamily="Arial Rounded MT Bold"/>
            <Canvas HorizontalAlignment="Stretch"/>
        </DockPanel>
        <ListView Margin="10,10,10,0" ItemsSource="{Binding Totals}" Grid.Row="1" SelectionMode="Single" x:Name="totalsList">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="{Binding CopyToClipboardCommand}"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="250" Header="Category Name" DisplayMemberBinding="{Binding Category.Name}" x:Name="totalsCol1"/>
                    <GridViewColumn Width="150" Header="Total Amount" CellTemplate="{StaticResource amountTemplate}" x:Name="totalsCol2"/>
                    <GridViewColumn Width="150" Header="Transactions Count" CellTemplate="{StaticResource tranCountTemplate}" x:Name="totalsCol3"/>
                    <GridViewColumn Width="50" CellTemplate="{StaticResource detailsTemplate}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin = "17, 5, 10, 0" VerticalAlignment="Center">
            <TextBlock Text="Total:" Width="{Binding Path=ActualWidth, ElementName=totalsCol1}" FontSize="13px" FontFamily="Arial Rounded MT Bold"/>
            <TextBlock Text="{Binding TotalAmount, Converter={StaticResource currencyConverter}}" TextAlignment="Right" Padding="0, 0, 7, 0"
                       Width="{Binding Path=ActualWidth, ElementName=totalsCol2}" FontSize="13px" FontFamily="Arial Rounded MT Bold"/>
            <TextBlock Text="{Binding TransactionsCount}" Width="{Binding Path=ActualWidth, ElementName=totalsCol3}"
                       FontSize="13px" FontFamily="Arial Rounded MT Bold" Margin="5, 0, 0, 0" TextAlignment="Center"/>
        </StackPanel>
        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="10,10,0,0">
            <CheckBox IsChecked="{Binding ShowOnlyExpences, Mode=TwoWay}" Margin="0,5,0,0">Only Expenses</CheckBox>
            <TextBox HorizontalAlignment="Center" Margin="10,3,0,0" BorderBrush="{x:Null}" SelectionBrush="{x:Null}" SelectionTextBrush="{x:Null}" Background="{x:Null}" Height="25" VerticalAlignment="Top">Filter By Category:</TextBox>
            <ComboBox ItemsSource="{Binding UnmatchedCategories}" Height="25" Width="150" HorizontalAlignment="Left" SelectedValue="{Binding SelectedCategory, Mode=TwoWay}"
                      VerticalAlignment="Top" Margin="10,0,0,0"/>
        </StackPanel>
        <ListView Margin="10,10,10,10" ItemsSource="{Binding NotMatchedTransactions}" Grid.Row="4" SelectionMode="Single">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Height" Value="28" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsBeingSplitted}" Value="True">
                            <Setter Property="Template" Value="{StaticResource splitTransactionTemplate}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="30" CellTemplate="{StaticResource checkBoxItemTemplate}" HeaderTemplate="{StaticResource checkBoxHeaderTemplate}"/>
                    <GridViewColumn Width="100" Header="Date" DisplayMemberBinding="{Binding Path=Date, Converter={StaticResource dateConverter}}"  />
                    <GridViewColumn Width="100" Header="Amount" CellTemplate="{StaticResource amountTemplate}"/>
                    <GridViewColumn Width="200" Header="Category" CellTemplate="{StaticResource categoryTemplate}"/>
                    <GridViewColumn Width="Auto" Header="Description" DisplayMemberBinding="{Binding Description}" />
                    <GridViewColumn Width="120" CellTemplate="{StaticResource actionsTemplate}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <DockPanel Grid.Row="5" Margin="10,0,10,0" HorizontalAlignment="Stretch" TextElement.FontFamily="Arial Rounded MT Bold" TextElement.FontSize="15">
            <Button VerticalAlignment="Center" Content="Load Transactions" DockPanel.Dock="Left" Padding="5, 0, 5, 0"
                    Command="{Binding LoadTransactionsCommand}"/>
            <Button VerticalAlignment="Center" Content="Save Transactions" DockPanel.Dock="Left" Margin="10, 0, 0, 0" Padding="5, 0, 5, 0"
                    Command="{Binding SaveTransactionsCommand}"/>
            <Button HorizontalAlignment="Right" VerticalAlignment="Center" Width="Auto" Command="{Binding DeleteTransactionCommand, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Delete Transactions</TextBlock>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                                    Visibility="{Binding TransactionsSelected, Converter={StaticResource intToVisibilityConverter}, Mode=OneWay}">
                        <TextBlock Foreground="Green" FontSize="10px" Text=" ("></TextBlock>
                        <TextBlock Foreground="Green" FontSize="10px" Text="{Binding Path=TransactionsSelected, Mode=OneWay}"></TextBlock>
                        <TextBlock Foreground="Green" FontSize="10px" Text=" selected)"></TextBlock>
                    </StackPanel>
                </StackPanel>
            </Button>
        </DockPanel>
    </Grid>
</Window>
